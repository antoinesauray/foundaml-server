language: scala

env:
  global:
  # the following `secure` is WHITESOURCE_PASSWORD which is the same for all branches.
  - secure: "A4xDS51pB8ERJPR/a5Lui//E//1L9pJ9Eg1kcRm/OR2izg7rx7p8Wemfp9gRhz8trn1mIrXDSMSK9iwENsfIP1bc/6AgtTWKBPm9DKjG0HW3swFFMBzzd6gxmOi4JD8rOtVc62Cf4qnURz+hsPRcI5C8aAW1fNi/5x1Q3HcAMtxE8EdPR7tU6Ve8utieOFPpqNQMktcL1aFusu+QddO14ZpQ944uAg0YdRRYFMG9SCbTkNDLt66AHTF4rKyZfkbM1tadqvvDez7Uo2eGK+KoQxTyrjct8W4Gqh+obOTyj1ngaPZEKvgbIJowFCrBzY5W+oNl6S+qa6PyAwq1MWKFqyUZt4P9fk3N9MDOYvuaS+YJCQd3VS4qCL9MEWahXNc3ZT+m8u5HT5axuPy+2qiKL/wrGzAXd74K9gNKuZJD7s+79Pwn34ZEbNMZ13AxyF6QkavU+Xcr5tQNwwZ+8P+k5OGoVsJOqZ3J7M+igGDRZh0fD693Wdp+mfORQqIvJFKED4daJYgTLufwt4tBLUxPUvlUZOWZFPn8DSQqTE7vsE9VPdpKSXTv1MyHxeMTiAX+XPabEWoazB8/4rljkC/EPxAButPD+AtUatfa6fIXpyGxHIvX8CFa2UnOQe9YbTRnxqa8TYvyMsWNQn1Q1eQMkvXCetqoefW5hA0UHTU5Zy4="
  matrix:
  - TRAVIS_JDK=adopt@1.8.192-12

matrix:
  fast_finish: true

before_install:
- if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then bash scripts/decrypt-keys.sh; fi
- export PATH=${PATH}:./vendor/bundle

install:
- export JAVA_HOME="$JABBA_HOME/jdk/$TRAVIS_JDK" && export PATH="$JAVA_HOME/bin:$PATH" && java -Xmx32m -version
- rvm use 2.6.0 --install --fuzzy
- gem update --system
- gem install sass
- gem install jekyll -v 3.2.1

cache:
  directories:
  - $HOME/.ivy2
  - $HOME/.jabba/jdk
  - $HOME/.sbt
  - $HOME/.m2/repository

before_cache:
# Ensure changes to the cache aren't persisted
- rm -rf $HOME/.ivy2/cache/com.lightbend.lagom/*
- rm -rf $HOME/.ivy2/cache/scala_*/sbt_*/com.lightbend.lagom/*
- rm -r $HOME/.m2/repository/com/lightbend/lagom/*
# Delete all ivydata files since ivy touches them on each build
- find $HOME/.ivy2 -name "ivydata-*.properties" -delete
- find $HOME/.sbt -name "*.lock" -delete

jobs:
  include:
  - stage: validations-and-test
    script: sbt ++$TRAVIS_SCALA_VERSION "project app" "scalafmtCheck" "test:scalafmtCheck" "scalafmtSbtCheck"
    name: "Code validations (format, binary compatibilty, whitesource, etc.)"
  - script: sbt ++$TRAVIS_SCALA_VERSION "project app" "coverage" "test" "coverageReport" "coverageOff" "package" "packageSrc" "publishLocal" "stage"
    name: "Run tests for Scala 2.12"

after_success:
- if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then bash
  scripts/publish-microsite.sh; fi
- if [ "$TRAVIS_PULL_REQUEST" = "true" ]; then echo "Not in master branch, skipping
  deploy and release"; fi
- if [ $TRAVIS_TAG ]; then echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin && docker build -t  hyperplan/server:$TRAVIS_TAG . && docker push hyperplan/server:$TRAVIS_TAG; fi

notifications:
  slack: foundaml:Gyf4WIYVB5wmf3g03NCc7iuU
